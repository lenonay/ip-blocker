DROP DATABASE IF EXISTS ip_blocker;

CREATE DATABASE ip_blocker;

USE ip_blocker;

DROP TABLE IF EXISTS IPs;
CREATE TABLE IPs(
ip VARCHAR(20) PRIMARY KEY,
peligro INT NOT NULL DEFAULT 0,
baneos INT NOT NULL DEFAULT 0,
last_ban VARCHAR(40),
is_banned VARCHAR(5) DEFAULT "false",
malicious_count INT DEFAULT 0
);


DROP TABLE IF EXISTS Peticiones;
CREATE TABLE Peticiones(
id INT PRIMARY KEY AUTO_INCREMENT,
ip VARCHAR(20),
method VARCHAR(20) NOT NULL DEFAULT "-",
uri VARCHAR(2000) NOT NULL DEFAULT "/",
version VARCHAR(10) NOT NULL DEFAULT "HTTP/1.1",
status INT NOT NULL DEFAULT "404",
req_bytes INT NOT NULL DEFAULT 0,
user_agent VARCHAR(1000) DEFAULT "-",
timestamp VARCHAR(40) DEFAULT TIMESTAMP(NOW()),
CONSTRAINT fk_cod_ip FOREIGN KEY (ip) REFERENCES IPs (ip) ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS Baneos;
CREATE TABLE Baneos (
id INT PRIMARY KEY AUTO_INCREMENT,
ip VARCHAR(20),
ban_level INT NOT NULL DEFAULT 1,
unban_time VARCHAR(40) NOT NULL,
time VARCHAR(40) NOT NULL DEFAULT TIMESTAMP(NOW()),
CONSTRAINT fk_baneos_ip FOREIGN KEY (ip) REFERENCES IPs (ip) ON UPDATE CASCADE ON DELETE CASCADE
);

